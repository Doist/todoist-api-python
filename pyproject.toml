[tool.poetry]
name = "todoist_api_python"
version = "2.1.7"
description = "Official Python SDK for the Todoist REST API."
readme = "README.md"
homepage = "https://github.com/Doist/todoist-api-python"
repository = "https://github.com/Doist/todoist-api-python"
documentation = "https://developer.todoist.com/rest/"
authors = ["Doist Developers <dev@doist.com>"]
keywords = ["todoist", "rest", "api", "python"]
license = "MIT"
classifiers = [
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pre-commit = "^4.0.0"
mypy = "^1.11"
responses = "^0.25.3"
pytest-asyncio = "^0.26.0"
types-requests = "^2.32"
ruff = "^0.11.0"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = 3.11
follow_imports = "silent"
mypy_path = "."
scripts_are_modules = true
namespace_packages = true
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
check_untyped_defs = true
enable_error_code = [
  "redundant-self",
  "redundant-expr",
  "ignore-without-code",
  "truthy-iterable",
  "truthy-bool",
]
extra_checks = true
strict_equality = true
strict_optional = true # default value, but required for Pylance to be strict, see https://twist.com/a/1585/ch/274843/t/3453725/c/76267088
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
untyped_calls_exclude = []

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
target-version = "py311"  # used by some linters like UP, FA, PERF

[tool.ruff.lint]
select = [
  "A",     # flake8-builtins
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "D",     # pydocstyle,
  "DTZ",   # flake8-datetimez,
  "E",     # pycodestyle errors
  "W",     # pycodestyle warnings
  "F",     # pyflakes
  "I",     # isort
  "PL",    # pylint
  "RUF",   # ruff
  "S",     # flake8-bandit
  "T20",   # flake8-print
  "SIM",   # flake8-simplify
  "UP",    # pyupgrade
  "TC",    # flake8-type-checking
  "TRY",   # tryceratops
  "BLE",   # flake8-blind-except
  "FA",    # flake8-future-annotations
  "FIX",   # flake8-fixme
  "ICN",   # flake8-import-conventions
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "RET",   # flake8-logging-return
  "ISC",   # flake8-implicit-str-concat
  "INP",   # flake8-no-pep420
  "PIE",   # flake8-pie
  "PT",    # flake8-pytest-style
  "TID",   # flake8-tidy-imports
  "PTH",   # flake8-user-pathlib
  "PERF",  # perflint
  "FURB",  # refurb
  "N",     # pep8-naming
  "PGH",   # pygrep-hooks
  "PYI",   # flake8-pyi
  "ANN",   # flake8-annotations
]

ignore = [
  "D203",    # incorrect-blank-line-before-class
  "D212",    # multi-line-summary-first-line
  "PLR0913", # too-many-arguments

  # All listed below are not intentional and should be fixed
  "D100",   # undocumented-public-module
  "D101",   # undocumented-public-class
  "D102",   # undocumented-public-method
  "D103",   # undocumented-public-function
  "D104",   # undocumented-public-package
  "D105",   # undocumented-magic-method
  "D107",   # undocumented-public-init
  "ANN003", # missing-type-kwargs
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
  "S101",    # assert
  "S105",    # hardcoded-password-string
  "PLR2004", # magic-value-comparison
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
docstring-code-format = true
